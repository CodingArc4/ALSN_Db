// <auto-generated />
using System;
using ALSN_Db.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ALSN_Db.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231207122810_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ALSN_Db.Models.Chat", b =>
                {
                    b.Property<long>("ChatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ChatID"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<long>("ReceiverID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SenderID")
                        .HasColumnType("bigint");

                    b.HasKey("ChatID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ReceiverID");

                    b.HasIndex("SenderID");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("ALSN_Db.Models.Country", b =>
                {
                    b.Property<long>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CountryID"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ALSN_Db.Models.Feedback", b =>
                {
                    b.Property<long>("FeedBackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FeedBackID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FeedBackDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("GuestID")
                        .HasColumnType("bigint");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("FeedBackID");

                    b.HasIndex("GuestID");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("ALSN_Db.Models.HeadOfAccount", b =>
                {
                    b.Property<long>("HeadOfAccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HeadOfAccountID"));

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidityFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidityTo")
                        .HasColumnType("datetime2");

                    b.HasKey("HeadOfAccountID");

                    b.ToTable("HeadOfAccounts");
                });

            modelBuilder.Entity("ALSN_Db.Models.Language", b =>
                {
                    b.Property<int>("LanguageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageID"));

                    b.Property<string>("LanguageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageID");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("ALSN_Db.Models.Order", b =>
                {
                    b.Property<long>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrderID"));

                    b.Property<string>("AttachmentDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GuestID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TranslationOfficeID")
                        .HasColumnType("bigint");

                    b.HasKey("OrderID");

                    b.HasIndex("GuestID");

                    b.HasIndex("TranslationOfficeID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ALSN_Db.Models.OrderAssignment", b =>
                {
                    b.Property<long>("OrderAssignementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrderAssignementID"));

                    b.Property<long>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<long>("TranslatorID")
                        .HasColumnType("bigint");

                    b.HasKey("OrderAssignementID");

                    b.HasIndex("OrderID");

                    b.HasIndex("TranslatorID");

                    b.ToTable("OrderAssignments");
                });

            modelBuilder.Entity("ALSN_Db.Models.OrderDetail", b =>
                {
                    b.Property<long>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrderDetailID"));

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFreeAmendments")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<long>("NoOfWords")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<int>("OrderRepitionID")
                        .HasColumnType("int");

                    b.Property<long>("PaymentAmount")
                        .HasColumnType("bigint");

                    b.Property<int>("SourceLanguageID")
                        .HasColumnType("int");

                    b.Property<int>("TargetLanguageID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("OrderID");

                    b.HasIndex("OrderRepitionID");

                    b.HasIndex("SourceLanguageID");

                    b.HasIndex("TargetLanguageID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ALSN_Db.Models.OrderPayment", b =>
                {
                    b.Property<long>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PaymentID"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<long>("GuestID")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentID");

                    b.HasIndex("GuestID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderPayments");
                });

            modelBuilder.Entity("ALSN_Db.Models.OrderRepition", b =>
                {
                    b.Property<int>("OrderRepitionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderRepitionID"));

                    b.Property<int>("OrderRepitionNo")
                        .HasColumnType("int");

                    b.Property<float>("OrderRepitionTimeLimitHrs")
                        .HasColumnType("real");

                    b.HasKey("OrderRepitionID");

                    b.ToTable("OrderRepitions");
                });

            modelBuilder.Entity("ALSN_Db.Models.Payment", b =>
                {
                    b.Property<long>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PaymentID"));

                    b.Property<long>("AdminID")
                        .HasColumnType("bigint");

                    b.Property<string>("Narration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<long>("PartyID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PaymentTypeID")
                        .HasColumnType("bigint");

                    b.HasKey("PaymentID");

                    b.HasIndex("AdminID");

                    b.HasIndex("OrderID");

                    b.HasIndex("PartyID");

                    b.HasIndex("PaymentTypeID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ALSN_Db.Models.PaymentDetails", b =>
                {
                    b.Property<long>("PaymentDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PaymentDetailID"));

                    b.Property<long>("Credit")
                        .HasColumnType("bigint");

                    b.Property<long>("Debit")
                        .HasColumnType("bigint");

                    b.Property<long>("HeadOfAccountID")
                        .HasColumnType("bigint");

                    b.Property<long>("PaymentID")
                        .HasColumnType("bigint");

                    b.HasKey("PaymentDetailID");

                    b.HasIndex("HeadOfAccountID");

                    b.HasIndex("PaymentID");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("ALSN_Db.Models.PaymentType", b =>
                {
                    b.Property<long>("PaymentTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PaymentTypeID"));

                    b.Property<string>("PaymentTypeTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentTypeID");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("ALSN_Db.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modules")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ALSN_Db.Models.RoleClaim", b =>
                {
                    b.Property<long>("ClaimsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ClaimsID"));

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("ClaimsID");

                    b.HasIndex("RoleID");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("ALSN_Db.Models.Ticket", b =>
                {
                    b.Property<long>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TicketID"));

                    b.Property<long>("AdminID")
                        .HasColumnType("bigint");

                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GuestID")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketID");

                    b.HasIndex("AdminID");

                    b.HasIndex("GuestID");

                    b.HasIndex("OrderID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("ALSN_Db.Models.TranslationOfficeTranslator", b =>
                {
                    b.Property<long>("TranslationOfficeTranslatorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TranslationOfficeTranslatorID"));

                    b.Property<long>("TranslationOfficeID")
                        .HasColumnType("bigint");

                    b.Property<long>("TranslatorID")
                        .HasColumnType("bigint");

                    b.HasKey("TranslationOfficeTranslatorID");

                    b.HasIndex("TranslationOfficeID");

                    b.HasIndex("TranslatorID");

                    b.ToTable("TranslationOfficeTranslators");
                });

            modelBuilder.Entity("ALSN_Db.Models.Translator", b =>
                {
                    b.Property<long>("TranslatorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TranslatorID"));

                    b.Property<int>("SourceLanguageID")
                        .HasColumnType("int");

                    b.Property<int>("TargetLanguageID")
                        .HasColumnType("int");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("TranslatorID");

                    b.HasIndex("SourceLanguageID");

                    b.HasIndex("TargetLanguageID");

                    b.HasIndex("UserID");

                    b.ToTable("Translators");
                });

            modelBuilder.Entity("ALSN_Db.Models.User", b =>
                {
                    b.Property<long>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserID"));

                    b.Property<int>("AccessedFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<long>("CountryID1")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LockOutEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumberConfirmed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("CountryID1");

                    b.HasIndex("UserTypeID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ALSN_Db.Models.UserBank", b =>
                {
                    b.Property<long>("BankID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BankID"));

                    b.Property<string>("AccountHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TranslationOfficeID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("BankID");

                    b.HasIndex("UserID");

                    b.ToTable("UserBanks");
                });

            modelBuilder.Entity("ALSN_Db.Models.UserRole", b =>
                {
                    b.Property<long>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserID"));

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<long>("UserID1")
                        .HasColumnType("bigint");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID1");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("ALSN_Db.Models.UserType", b =>
                {
                    b.Property<int>("UserTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserTypeID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageExpertise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserTypeTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserTypeID");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("ALSN_Db.Models.Chat", b =>
                {
                    b.HasOne("ALSN_Db.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("ALSN_Db.Models.Feedback", b =>
                {
                    b.HasOne("ALSN_Db.Models.User", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("ALSN_Db.Models.Order", b =>
                {
                    b.HasOne("ALSN_Db.Models.User", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.User", "TranslationOffice")
                        .WithMany()
                        .HasForeignKey("TranslationOfficeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("TranslationOffice");
                });

            modelBuilder.Entity("ALSN_Db.Models.OrderAssignment", b =>
                {
                    b.HasOne("ALSN_Db.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.User", "Translator")
                        .WithMany()
                        .HasForeignKey("TranslatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Translator");
                });

            modelBuilder.Entity("ALSN_Db.Models.OrderDetail", b =>
                {
                    b.HasOne("ALSN_Db.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.OrderRepition", "OrderRepition")
                        .WithMany()
                        .HasForeignKey("OrderRepitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.Language", "SourceLanguage")
                        .WithMany()
                        .HasForeignKey("SourceLanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.Language", "TargetLanguage")
                        .WithMany()
                        .HasForeignKey("TargetLanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("OrderRepition");

                    b.Navigation("SourceLanguage");

                    b.Navigation("TargetLanguage");
                });

            modelBuilder.Entity("ALSN_Db.Models.OrderPayment", b =>
                {
                    b.HasOne("ALSN_Db.Models.User", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ALSN_Db.Models.Payment", b =>
                {
                    b.HasOne("ALSN_Db.Models.User", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.User", "Party")
                        .WithMany()
                        .HasForeignKey("PartyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Order");

                    b.Navigation("Party");

                    b.Navigation("PaymentType");
                });

            modelBuilder.Entity("ALSN_Db.Models.PaymentDetails", b =>
                {
                    b.HasOne("ALSN_Db.Models.HeadOfAccount", "HeadOfAccount")
                        .WithMany()
                        .HasForeignKey("HeadOfAccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeadOfAccount");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("ALSN_Db.Models.RoleClaim", b =>
                {
                    b.HasOne("ALSN_Db.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ALSN_Db.Models.Ticket", b =>
                {
                    b.HasOne("ALSN_Db.Models.User", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.User", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Guest");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ALSN_Db.Models.TranslationOfficeTranslator", b =>
                {
                    b.HasOne("ALSN_Db.Models.User", "TranslationOffice")
                        .WithMany()
                        .HasForeignKey("TranslationOfficeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.User", "Translator")
                        .WithMany()
                        .HasForeignKey("TranslatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TranslationOffice");

                    b.Navigation("Translator");
                });

            modelBuilder.Entity("ALSN_Db.Models.Translator", b =>
                {
                    b.HasOne("ALSN_Db.Models.Language", "SourceLanguage")
                        .WithMany()
                        .HasForeignKey("SourceLanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.Language", "TargetLanguage")
                        .WithMany()
                        .HasForeignKey("TargetLanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SourceLanguage");

                    b.Navigation("TargetLanguage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ALSN_Db.Models.User", b =>
                {
                    b.HasOne("ALSN_Db.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("ALSN_Db.Models.UserBank", b =>
                {
                    b.HasOne("ALSN_Db.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ALSN_Db.Models.UserRole", b =>
                {
                    b.HasOne("ALSN_Db.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALSN_Db.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
